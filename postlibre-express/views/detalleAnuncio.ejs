<%- include("partials/header", { title: anuncio.titulo }) -%>

<!-- scripts y estilos -->

<script src="/js/subasta.js"></script>
<script src="/js/countdown.js"></script> 
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/progressbar.js"></script>

<link rel="stylesheet" href="/css/styleA.css">

<main class="flex min-h-screen bg-gray-50">

    <!-- ===== COLUMNA IZQUIERDA: VISUAL ===== -->
  <aside class="w-1/2 h-full overflow-y-auto bg-white border-r border-gray-200">
    <!-- Imagen principal -->
    <div class="h-64 bg-gray-200 overflow-hidden">
      <img
        src="<%= anuncio.imagen %>"
        alt="Imagen de <%= anuncio.titulo %>"
        class="w-full h-full object-cover"
      />
    </div>

</aside>

    
  <!-- ===== COLUMNA DERECHA: DATOS Y ACCIONES ===== -->
  <section class="w-1/2 h-full overflow-y-auto p-8">

      <!-- Título y descripción -->
      <h1 class="text-3xl font-bold text-gray-900 mb-2"><%= anuncio.titulo %></h1>
      <p class="text-gray-600 mb-4"><%= anuncio.descripcion %></p>

      <!-- Estado + Countdown grande -->
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
        <div class="mb-4 sm:mb-0">
          <% 
            const ahora = new Date(), 
                  expir = new Date(anuncio.fechaExpiracion),
                  fin    = ahora >= expir,
                  activa = anuncio.estadoSubasta==='activa' && ahora<expir,
                  pend   = anuncio.estadoSubasta==='pendiente' && ahora<expir;
          %>
          <% if (fin) { %>
            <span class="text-red-600 font-semibold">🔚 Finalizada</span>
          <% } else if (activa) { %>
            <span class="text-green-600 font-semibold">✅ En curso</span>
          <% } else if (pend) { %>
            <span class="text-red-500 font-semibold">🕒 La subasta empieza en:</span>
          <% } %>
        </div>
        <div class="countdown-container" 
     id="countdown-<%= anuncio._id %>"
     data-inicio="<%= anuncio.fechaInicioSubasta 
                      ? new Date(anuncio.fechaInicioSubasta).toISOString() 
                      : '' %>"
     data-fin="<%= anuncio.fechaExpiracion 
                    ? new Date(anuncio.fechaExpiracion).toISOString() 
                    : '' %>">

          <div class="flex space-x-2 text-center">
            <div class="countdown-box">
                <div class="countdown-box-value">00</div>
                <div class="countdown-box-label">SEGUNDOS</div>
              </div>
            <% ['DÍAS','HORAS','MINUTOS','SEGUNDOS'].forEach((lbl,i) => { %>
              <div class="countdown-box">
                <div class="countdown-box-value">00</div>
                <div class="countdown-box-label"><%= lbl %></div>
              </div>
              <% if (i<3) { %><span class="countdown-separator">:</span><% } %>
            <% }) %>
          </div>
        </div>
      </div>

      <!-- Precio + temporizador pequeño -->
      <div class="flex items-center justify-between mb-6">
        <p class="text-red-600 text-2xl font-bold">€<span id="precio-<%= anuncio._id %>"><%= anuncio.precioActual %></span></p>
        <div class="bg-black text-white px-3 py-1 rounded">
          ⏳ <span id="timer-<%= anuncio._id %>">
            <% if (anuncio.estadoSubasta==='finalizada') { %>00:00<% } else { %>5:00<% } %>
          </span>
        </div>
      </div>
      

     

      <!-- CONTENEDOR DEL GAUGE 5 min-->
<div id="startTimer" class="mx-auto my-6" style="width:200px;height:200px; position:relative;"></div>

<!-- TEMPORIZADOR PEQUEÑO (oculto hasta que acabe el gauge) 
<div id="bidTimer" class="bg-black text-white px-4 py-2 rounded inline-block" style="display:none;">
  ⏳ <span id="small-timer">5:00</span>
</div>-->


      <!-- ② Gráfico de precio -->
      <div class="w-full max-w-lg mx-auto mb-6">
        <canvas id="priceChart-<%= anuncio._id %>"></canvas>
      </div>


      <!-- Detalles -->
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-gray-600 text-sm mb-6">
        <div>📌 Publicó: <strong><%= anuncio.autor %></strong></div>
        <div>📌 Ubicación: <strong><%= anuncio.ubicacion || 'No especificada' %></strong></div>
        <div class="sm:col-span-2">
          📌 Inscritos: 
          <% if (anuncio.inscritos.length) { %>
            <%= anuncio.inscritos.join(', ') %>
          <% } else { %>
            <span class="text-gray-400">Ninguno aún</span>
          <% } %>
        </div>
      </div>

      <!-- Pujas realizadas -->
      <div id="pujas-<%= anuncio._id %>" class="mb-6">
        <h3 class="font-semibold text-gray-800 mb-2">📢 Pujas</h3>
        <% if (anuncio.pujas.length) { %>
          <% anuncio.pujas.forEach(p => { %>
            <div class="flex justify-between bg-gray-50 p-2 rounded mb-1">
              <span><%= p.usuario %></span>
              <span class="<%= p.automatica ? 'text-green-500' : '' %>">€<%= p.cantidad %></span>
            </div>
          <% }) %>
        <% } else { %>
          <p class="text-gray-500">Aún no hay pujas.</p>
        <% } %>
      </div>
      <!-- Lista de inscritos con botón de chat -->
<% if (user && user.username === anuncio.autor) { %>
    <% if (anuncio.sugerencias && anuncio.sugerencias.length > 0) { %>
      <div class="mt-4 bg-yellow-50 p-4 rounded-lg shadow-md border border-yellow-200">
        <h5 class="text-md font-semibold text-yellow-800 mb-2">
          🎯 Usuarios recomendados para este anuncio:
        </h5>
        <ul class="list-disc list-inside text-sm text-gray-800">
          <% anuncio.sugerencias.forEach(s => { %>
            <li>
              <strong><%= s.username %></strong> — 
              <span class="text-yellow-500">
                <% for (let i = 1; i <= 5; i++) { %>
                  <%= i <= Math.round(s.reputacion) ? "★" : "☆" %>
                <% } %>
              </span>
              (<%= s.reputacion.toFixed(1) %> ⭐ — <%= s.totalResenas %> reseñas)
            </li>
          <% }) %>
        </ul>
      </div>
    <% } %>
  
    <!-- aquí vendría la lista de inscritos con chat-->
    <div class="mt-6">
        <h4 class="text-md font-semibold text-gray-800 mb-3">📌 Usuarios inscritos:</h4>
        <ul class="space-y-3">
            <% if (anuncio.inscritos && anuncio.inscritos.length > 0) { %>

                <% anuncio.inscritos.forEach(inscrito => { %>
                    <li class="flex justify-between items-center bg-gray-100 p-3 rounded-lg shadow-sm">
                        <span class="text-gray-700 font-medium"><%= inscrito %></span>
                        <a href="/chat?anuncioId=<%= anuncio._id %>&usuario=<%= inscrito %>" 
                            class="bg-blue-500 no-underline text-white px-4 py-2 rounded-lg shadow-md hover:bg-blue-700 transition text-sm flex items-center">
                            💬 Chatear
                        </a>
                    </li>
                <% }); %>
            <% } else { %>
                <p class="text-gray-400 text-sm">No hay usuarios inscritos todavía.</p>
            <% } %>
        </ul>
    </div>
  <% } %>  
  
      
      


      <!-- ACCIONES DEL USUARIO -->
      <% if (user && user.username !== anuncio.autor) { %>
        

        <!-- Oferta automática (solo si está pendiente) -->
      <% if (user && anuncio.estadoSubasta==='pendiente') { %>
        <form id="oferta-automatica-form-<%= anuncio._id %>" method="POST" action="/anuncios/oferta-automatica/<%= anuncio._id %>" class="flex gap-2 mb-6">
          <input type="number" name="precioMaximo" min="0" max="<%= anuncio.precioActual %>" required
                 class="flex-1 border rounded p-2 focus:ring-2 focus:ring-green-300"
                 placeholder="Oferta auto (€)">
          <button type="submit"
                  class="bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded transition">
            🤖 Programar
          </button>
        </form>
      <% } %>

      <!-- 1) PUJA MANUAL (botón, manejado por subasta.js) -->
      <button 
      class="pujar-btn w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-2 rounded mb-6 transition"
      data-anuncio-id="<%= anuncio._id %>">
    🔥 Pujar
  </button>

        <!-- 2) Favorito / Inscripción / Chat -->
        <div class="grid grid-cols-3 gap-2 mb-6">
          <!-- Favorito -->
          <form action="/favoritos/<%= anuncio._id %>" method="POST">
            <button type="submit" class="favorite-btn <%= anuncio.esFavorito ? 'favorito' : '' %>">
              <!-- Corazón vacío -->
              <svg class="empty" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path fill="none" d="M0 0H24V24H0z"></path>
                <path d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5C9.5 20 2 16 2 9c0-3.5 
                                          2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2zm-3.566 15.604c.881-.556 
                                          1.676-1.109 2.42-1.701C18.335 14.533 20 11.943 20 9c0-2.36-1.537-4-3.5-4-1.076 
                                          0-2.24.57-3.086 1.414L12 7.828l-1.414-1.414C9.74 5.57 8.576 5 7.5 5 5.56 5 
                                          4 6.656 4 9c0 2.944 1.666 5.533 4.645 7.903.745.592 1.54 1.145 2.421 
                                          1.7.299.189.595.37.934.572.339-.202.635-.383.934-.571z"></path>
              </svg>
          
              <!-- Corazón lleno -->
              <svg class="filled" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path fill="none" d="M0 0H24V24H0z"></path>
                <path fill="#ff4b4b" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 
                                          12.5C9.5 20 2 16 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 
                                          12 5c1-1 2.64-2 4.5-2z"></path>
              </svg>
            </button>
          </form>

          <!-- Inscribirse / Inscrito -->
          <% if (!anuncio.inscritos.includes(user.username)) { %>
            <button type="button" onclick="inscribirse('<%= anuncio._id %>')"
                    class="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-2 rounded transition">
              Inscribirme
            </button>
          <% } else { %>
            <button disabled
                    class="w-full bg-gray-400 text-white font-semibold py-2 rounded">
              Inscrito
            </button>
          <% } %>

          <!-- Chat -->
          <% if (anuncio.inscritos.includes(user.username)) { %>
            <% if (anuncio.chatIniciado) { %>
              <a href="/chat?anuncioId=<%= anuncio._id %>&usuario=<%= anuncio.autor %>"
                 class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded text-center transition">
                💬 Chat
              </a>
            <% } else { %>
              <button disabled
                      class="w-full bg-gray-400 text-white font-semibold py-2 rounded opacity-70 cursor-not-allowed">
                ⏳ Esperando conversación
              </button>
            <% } %>
          <% } %>
        </div>
      <% } %>
        <!-- Reseñar al autor si eres inscrito -->
<% if (
    user &&
    user.username !== anuncio.autor &&
    Array.isArray(anuncio.inscritos) &&
    anuncio.inscritos.includes(user.username) &&
    !anuncio.resenaEnviadaAlAutor
 ) { %>
<div class="mt-6 bg-gray-100 p-4 rounded-lg">
  <h4 class="text-lg font-semibold mb-3">📢 Valorar al autor del anuncio</h4>
  <form action="/resenas/<%= anuncio.autor %>/<%= anuncio._id %>" method="POST" class="space-y-3">
    <div class="rating">
        <input type="radio" name="puntuacion" id="star5-autor-<%= anuncio._id %>" value="5">
        <label for="star5-autor-<%= anuncio._id %>" title="5 estrellas"></label>
        <input type="radio" name="puntuacion" id="star4-autor-<%= anuncio._id %>" value="4">
        <label for="star4-autor-<%= anuncio._id %>" title="4 estrellas"></label>
        <input type="radio" name="puntuacion" id="star3-autor-<%= anuncio._id %>" value="3">
        <label for="star3-autor-<%= anuncio._id %>" title="3 estrellas"></label>
        <input type="radio" name="puntuacion" id="star2-autor-<%= anuncio._id %>" value="2">
        <label for="star2-autor-<%= anuncio._id %>" title="2 estrellas"></label>
        <input type="radio" name="puntuacion" id="star1-autor-<%= anuncio._id %>" value="1">
        <label for="star1-autor-<%= anuncio._id %>" title="1 estrella"></label>
    </div>
    <textarea name="comentario" required class="border p-2 w-full" placeholder="Escribe tu opinión aquí…"></textarea>
    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">Enviar Reseña</button>
  </form>
</div>
<% } else if (
    user &&
    user.username !== anuncio.autor &&
    anuncio.inscritos.includes(user.username) &&
    anuncio.resenaEnviadaAlAutor
 ) { %>
<p class="text-sm text-gray-500 mt-2">✅ Ya has enviado una reseña al autor.</p>
<% } %>

<!-- Lista de inscritos con botón de chat -->
<!-- Ahora, valorar a los inscritos (sólo autor) -->
<% if (user && user.username === anuncio.autor && anuncio.inscritos.length > 0) { %>
<h5 class="text-md font-semibold mt-4">Valorar a los inscritos</h5>
<% anuncio.inscritos.forEach(inscrito => { %>
  <% if (!anuncio.inscritosConResenaPorAnuncio[inscrito]) { %>
    <form action="/resenas/<%= inscrito %>/<%= anuncio._id %>" method="POST" class="space-y-3 mb-4">
        <div class="rating">
            <input type="radio" id="star5-<%= inscrito %>-<%= anuncio._id %>" name="puntuacion" value="5" required>
            <label for="star5-<%= inscrito %>-<%= anuncio._id %>" title="5 estrellas"></label>
            <input type="radio" id="star4-<%= inscrito %>-<%= anuncio._id %>" name="puntuacion" value="4">
            <label for="star4-<%= inscrito %>-<%= anuncio._id %>" title="4 estrellas"></label>
            <input type="radio" id="star3-<%= inscrito %>-<%= anuncio._id %>" name="puntuacion" value="3">
            <label for="star3-<%= inscrito %>-<%= anuncio._id %>" title="3 estrellas"></label>
            <input type="radio" id="star2-<%= inscrito %>-<%= anuncio._id %>" name="puntuacion" value="2">
            <label for="star2-<%= inscrito %>-<%= anuncio._id %>" title="2 estrellas"></label>
            <input type="radio" id="star1-<%= inscrito %>-<%= anuncio._id %>" name="puntuacion" value="1">
            <label for="star1-<%= inscrito %>-<%= anuncio._id %>" title="1 estrella"></label>
        </div>
      <textarea name="comentario" required class="border p-2 w-full" placeholder="Deja un comentario…"></textarea>
      <button class="bg-blue-500 text-white px-4 py-2 rounded">Enviar Reseña</button>
    </form>
  <% } else { %>
    <p class="text-green-600 mb-2">✅ Ya has enviado reseña a <%= inscrito %>.</p>
  <% } %>
<% }) %>
<% } %>

      

      <!-- EDITAR / ELIMINAR (solo autor) -->
      <% if (user && user.username===anuncio.autor) { %>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6">
          <button 
            class="edit-btn inline-flex justify-center items-center bg-yellow-500 hover:bg-yellow-600 text-white font-semibold py-2 rounded transition"
            data-id="<%= anuncio._id %>"
            data-titulo="<%= anuncio.titulo %>"
            data-descripcion="<%= anuncio.descripcion %>"
            data-precio="<%= anuncio.precioActual %>">
            ✏️ Editar
          </button>
          <button 
            class="delete-btn w-full inline-flex justify-center items-center bg-red-500 hover:bg-red-600 text-white font-semibold py-2 rounded transition"
            data-id="<%= anuncio._id %>">
            🗑️ Eliminar
          </button>
        </div>

        <!-- Modal de Edición (idéntico al de listado) -->
        <div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center">
          <div class="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 class="text-lg font-bold mb-4">Editar Anuncio</h2>
            <form id="editForm">
              <input type="hidden" id="editAnuncioId">
              <label class="block mb-2">Título:</label>
              <input type="text" id="editTitulo" class="w-full border p-2 rounded mb-3" required>
              <label class="block mb-2">Descripción:</label>
              <textarea id="editDescripcion" class="w-full border p-2 rounded mb-3" required></textarea>
              <label class="block mb-2">Precio:</label>
              <input type="number" id="editPrecio" class="w-full border p-2 rounded mb-3" required>
              <div class="flex justify-end gap-2">
                <button type="button" id="cancelEdit" class="bg-gray-400 px-4 py-2 rounded text-white">Cancelar</button>
                <button type="submit" class="bg-blue-500 px-4 py-2 rounded text-white">Guardar</button>
              </div>
            </form>
          </div>
        </div>
      <% } %>

      <!-- Volver -->
      <div class="text-center">
        <a href="/anuncios" class="text-blue-500 hover:underline font-medium">
          🔙 Volver a la lista
        </a>
      </div>

    
    </section>
</main>

<script>
    document.addEventListener("DOMContentLoaded", () => {
      const TOTAL = 5 * 60;
      const cont = document.querySelector(".countdown-container");
      const inicioISO = cont?.dataset.inicio;
      const startTime = inicioISO ? new Date(inicioISO) : null;
      const now = new Date();
      let remaining = TOTAL;
      let gaugeIv;    // ← guardaremos aquí el setInterval
      let bar = new ProgressBar.Circle('#startTimer', {
        strokeWidth: 8,
        trailWidth: 8,
        trailColor: '#eee',
        easing: 'linear',
        duration: 1000,
        svgStyle: { width: '100%', height: '100%' },
        text: { value: formatTime(remaining) },
        from: { color: '#1dd1a1' },
        to:   { color: '#ff4757' },
        step: (state, circle) => {
          circle.path.setAttribute('stroke', state.color);
          circle.setText(formatTime(remaining));
        }
      });
      // Centrar el texto:
      Object.assign(bar.text.style, {
        position:'absolute', top:'50%', left:'50%',
        transform:'translate(-50%,-50%)',
        margin:0, fontSize:'1.25rem', fontFamily:'Helvetica, sans-serif'
      });
    
      function formatTime(sec) {
        const m = Math.floor(sec/60), s = sec%60;
        return `${m}:${s<10?'0':''}${s}`;
      }
    
      function beginGauge(elapsed=0) {
        remaining = TOTAL - elapsed;
        bar.set(elapsed/TOTAL);
        bar.animate(1, { duration: remaining*1000 });
        gaugeIv = setInterval(() => {
          remaining--;
          if (remaining < 0) {
            clearInterval(gaugeIv);
            return;
          }
          bar.setText(formatTime(remaining));
        }, 1000);
      }
    
      if (startTime && now < startTime) {
        setTimeout(()=> beginGauge(0), startTime - now);
      } else if (startTime && now < startTime.getTime() + TOTAL*1000) {
        const elapsed = Math.floor((now - startTime)/1000);
        beginGauge(elapsed);
      } else {
        // si ya pasó, opcionalmente arrancas gauge a 0
        beginGauge(TOTAL);
      }
    
      // SOCKET.IO
      const socket = io();
      socket.on("subasta_finalizada", data => {
        // 1) mata el interval del gauge
        clearInterval(gaugeIv);
        // 2) lleva el gauge a “agotado”
        bar.set(1);                 // círculo completo
        bar.setText("0:00");        // texto a cero
        // 3) si quieres, también actualizas el temporizador pequeño:
        const te = document.getElementById(`timer-${data.anuncioId}`);
        if (te) te.innerText = "00:00";
      });
    });
    
  // Inscribirse
  function inscribirse(anuncioId) {
    fetch(`/inscribirse/${anuncioId}`, {
      method: "POST",
      credentials: "same-origin"
    })
    .then(res => res.json())
    .then(json => {
      if (json.message === "Inscripción exitosa") {
        return location.reload();
      }
      alert(json.message || "Error al inscribirse");
    })
    .catch(() => alert("Error en la petición de inscripción"));
  }

  document.addEventListener("DOMContentLoaded", function () {
    var user = JSON.parse('<%- JSON.stringify(user || {}) %>');
    
    const socket = io();

    // Countdown grandes
    document.querySelectorAll(".countdown-container").forEach(el => {
      iniciarCuentaRegresiva(el.id.replace("countdown-",""));
    });

    // Oferta automática
    document.querySelectorAll('[id^="oferta-automatica-form-"]').forEach(form => {
      form.addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(form);
        const id = form.id.replace("oferta-automatica-form-","");
        fetch(`/anuncios/oferta-automatica/${id}`, {
          method: "POST",
          body: new URLSearchParams(formData),
          headers: { "Content-Type":"application/x-www-form-urlencoded" }
        })
        .then(r=>r.json())
        .then(d=>{
          if(d.mensaje){
            alert("✅ "+d.mensaje);
          }
        });
      });
    });

    // Actualizaciones via socket
    socket.on("actualizar_subasta", data => {
      const { anuncioId, precioActual, tiempoRestante } = data;
      const pe = document.getElementById(`precio-${anuncioId}`);
      const te = document.getElementById(`timer-${anuncioId}`);
      if (pe) pe.innerText = `€${precioActual}`;
      if (te) {
        if (tiempoRestante>=0) {
          const m = Math.floor(tiempoRestante/60),
                s = tiempoRestante%60;
          te.innerText = `${m}:${s<10?'0':''}${s}`;
        } else te.innerText = "00:00";
      }
    });
    socket.on("subasta_finalizada", data=>{
      alert(`La subasta ${data.anuncioId} ha finalizado en €${data.precioFinal}`);
    });

    // Editar
    const editModal = document.getElementById("editModal"),
          editForm  = document.getElementById("editForm");
    document.querySelectorAll(".edit-btn").forEach(btn=>{
      btn.addEventListener("click",()=> {
        document.getElementById("editAnuncioId").value = btn.dataset.id;
        document.getElementById("editTitulo").value    = btn.dataset.titulo;
        document.getElementById("editDescripcion").value = btn.dataset.descripcion;
        document.getElementById("editPrecio").value    = btn.dataset.precio;
        editModal.classList.remove("hidden");
      });
    });
    document.getElementById("cancelEdit").addEventListener("click", ()=> {
      editModal.classList.add("hidden");
    });
    editForm.addEventListener("submit", async e => {
      e.preventDefault();
      const id = document.getElementById("editAnuncioId").value;
      const updatedData = {
        titulo: document.getElementById("editTitulo").value,
        descripcion: document.getElementById("editDescripcion").value,
        precioActual: Number(document.getElementById("editPrecio").value)
      };
      try {
        const res = await fetch(`/api/anuncios/${id}`, {
          method: "PUT",
          headers: {
            "Content-Type":"application/json",
            "x-api-key": localStorage.getItem("apiKey")
          },
          body: JSON.stringify(updatedData)
        });
        const json = await res.json();
        if (json.success) {
          alert("✅ Anuncio actualizado");
          location.reload();
        } else alert("❌ "+json.error);
      } catch(err) {
        alert("❌ Error al actualizar");
      }
    });

    // Eliminar
    function attachDelete() {
      document.querySelectorAll(".delete-btn").forEach(btn=>{
        btn.addEventListener("click", async ()=> {
          if (!confirm("¿Eliminar anuncio?")) return;
          const id = btn.dataset.id;
          try {
            const res = await fetch(`/api/anuncios/${id}`, {
              method: "DELETE",
              headers: {
                "Content-Type":"application/json",
                "x-api-key": localStorage.getItem("apiKey")
              }
            });
            const json = await res.json();
            if (json.success) {
              alert("✅ Eliminado");
              location.href = "/anuncios";
            } else alert("❌ "+json.error);
          } catch(e) {
            alert("❌ Error al eliminar");
          }
        });
      });
    }
    setTimeout(attachDelete, 500);
  });
</script>

<%- include("partials/footer") -%>
